{"name":"Get.js","body":"# GET.js\r\n\r\nGET.js helps to retreive the data passed in a URL query string.\r\n\r\nIt can be used in a browser or in [Node.js](http://nodejs.org)\r\n\r\n## Installation\r\n\r\nJust download the script and include it in your page, like this:\r\n\r\n    <script type='text/javascript' src='GET.js'></script>\r\n\r\nThere is also a minified version:\r\n\r\n    <script type='text/javascript' src='GET.min.js'></script>\r\n\r\nGET.js can also be used in [node.js](http://nodejs.org) and is available through the [npm](http://npmjs.org):\r\n\r\n    npm install GET.js\r\n\r\n## Usage\r\n\r\nIf you use GET.js in a Web browser, you can access the data in the query string of the current page through the `$_GET` array:\r\n\r\n    console.log(document.location.href); // foo.html?bar=baz&hello=world\r\n    console.log($_GET['bar']); // baz\r\n    console.log($_GET['hello']); // world\r\n\r\nYou can also use the `parse_query` function to parse the query string of another URL:\r\n\r\n    var url = 'http://foo.bar/?a=1&b=2&c=3';\r\n    console.log(parse_query(url)); // {a: 1, b: 2, c: 3}\r\n\r\nIf you have installed GET.js through the [npm](http://npmjs.org), you can use it in [node.js](http://nodejs.org) like this:\r\n\r\n    var GETjs = require('GET.js');  // import it first\r\n\r\n    var url = 'http://foo.bar/?a=1&b=2&c=3';\r\n    GETjs.parse_query(url); // {a: 1, b: 2, c: 3} // Use it as in the browser\r\n\r\n\r\n## Licence\r\n\r\nGET.js is licenced under the BSD 3-clauses license, see the `COPYING` file for details ...\r\n\r\n\r\n*Have fun !*\r\n","tagline":"Get the data passed to the current page via the URL parameters like in PHP","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}